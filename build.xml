<project>

    <property environment="env"/>

    <fail message="CLIENT_ID not set.">
        <condition>
            <not>
                <isset property="env.CLIENT_ID"/>    
            </not>
        </condition>
    </fail>

    <fail message="CLIENT_SECRET not set.">
        <condition>
            <not>
                <isset property="env.CLIENT_SECRET"/>
            </not>
        </condition>
    </fail>

    <fail message="APP_ID not set.">
        <condition>
            <not>
                <isset property="env.APP_ID"/>
            </not>
        </condition>
    </fail>

    <fail message="EXECUTABLE_NAME not set.">
        <condition>
            <not>
                <isset property="env.EXECUTABLE_NAME"/>    
            </not>
        </condition>
    </fail>

    <fail message="APP_JSON not set.">
        <condition>
            <not>
                <isset property="env.APP_JSON"/>
            </not>
        </condition>
    </fail>

    <fail message="TARGET_OS not set.">
        <condition>
            <not>
                <isset property="env.TARGET_OS"/>
            </not>
        </condition>
    </fail>

    <fail message="TARGET_ARCH not set.">
        <condition>
            <not>
                <isset property="env.TARGET_ARCH"/>
            </not>
        </condition>
    </fail>
    
    <property name="executable_name" value="orderRetrieveOrchestrator"/>
    <property name="app_json" value="OrderRetrieveOrchestrator.json"/>
    <property name="target_os" value="linux"/>
    <property name="target_arch" value="amd64"/>
    
    <property name="appid" value="${env.APP_ID}"/>
    <property name="client_id" value="${env.CLIENT_ID}"/>
    <property name="client_secret" value="${env.CLIENT_SECRET}"/>

    <echo message="APP_ID: ${appid}"/>
    <echo message="CLIENT_ID: ${client_id}"/>
    <echo message="CLIENT_SECRET: ${client_secret}"/>
    <echo message="EXECUTABLE_NAME: ${executable_name}"/>
    <echo message="APP_JSON: ${app_json}"/>
    <echo message="TARGET_OS: ${target_os}"/>
    <echo message="TARGET_ARCH: ${target_arch}"/>
    
    <target name="init" depends="fetch-token">
    
    </target>

    <target name="clean">
      <delete file="flogo-app.exe" />
      <delete file="export.zip"/>
      <delete file="testsuite.flogotest"/>
      <delete file="tests/unittestapp.testresult"/>
    </target>


    <target name="fetch-token">
        <exec executable="curl" outputproperty="json-token">
            <arg value="-s" />
            <arg value="--location" />
            <arg value="https://eu.account.cloud.tibco.com/idm/v1/oauth2/token" />
            <arg value="--header" />
            <arg value="Content-Type: application/x-www-form-urlencoded" />        
            <arg value="--user" />
            <arg value="${client_id}:${client_secret}" />
            <arg value="--data-urlencode" />
            <arg value="grant_type=client_credentials" />
            <arg value="--data-urlencode" />
            <arg value="scope=TCI" />        
        </exec>

       <exec executable="jq" inputstring="${json-token}" outputproperty="access-token">
         <arg value=".access_token"/>
         <arg value="--raw-output"/>
       </exec>

       <echo message="${access-token}" />

       <property name="token" value="${access-token}"/>

    </target>


    <target name="build" depends="init">

        <fail unless="token">Bearer Token not set!</fail>

        <exec executable="curl">
            <arg value="-s" />
            <arg value="--location" />
            <arg value="https://eu.api.cloud.tibco.com/tci/v1/subscriptions/0/apps/${appid}/flogo/build?os=${target_os}&amp;arch=${target_arch}" />
            <arg value="--header" />
            <arg value="accept: application/json" />
            <arg value="--header" />
            <arg value="Content-Type: application/x-www-form-urlencoded" />        
            <arg value="--header" />
            <arg value="Authorization: Bearer ${token}" />
            <arg value="--data-urlencode" />
            <arg value="Request=" />        
        </exec>

    </target>

    <target name="build-using-appjson" depends="init">

        <fail unless="token">Bearer Token not set!</fail>

        <echo message="Building Flogo application from source ${app_json}"/>
        
        <exec executable="curl">
            <arg value="-s" />
            <arg value="-X" />
            <arg value="POST" />
            <arg value="--location" />
            <arg value="https://eu.api.cloud.tibco.com/tci/v1/subscriptions/0/app/build/flogo?os=${target_os}&amp;arch=${target_arch}&amp;name=${executable_name}" />
            <arg value="--header" />
            <arg value="accept: application/json" />
            <arg value="--header" />
            <arg value="Content-Type: multipart/form-data" />        
            <arg value="--header" />
            <arg value="Authorization: Bearer ${token}" />
            <arg value="--form" />
            <arg value="flogo.json=@./src/${app_json}" />
            <arg value="--output" />
            <arg value="build.json" />
        </exec>

       <exec executable="jq" outputproperty="build_id">
           <arg value="--raw-output"/>
           <arg value=".[5].buildId"/>
           <arg value="build.json"/>
       </exec>

        <echo message="BUILD_ID: ${build_id}" />
        
    </target>

    <target name="docker-build">

        <fail unless="container_name">Container Name 'container_name' not set!</fail>
        <fail unless="container_tag">Container Tag 'container_tag' not set!</fail>

        <available file="${executable_name}" property="file.exists"/>
        <fail message="File not found: ${executable_name}" unless="file.exists"/>
            
        <exec executable="docker">
            <arg value="build" />
            <arg value="." />
            <arg value="-t" />
            <arg value="${container_name}:${container_tag}" />
        </exec>
        
    </target>
    
    <target name="download-app-using-buildid" depends="init">
    
        <fail unless="token">Bearer Token 'token' not set!</fail>

        <fail unless="build_id">Build Identifier 'build_id' not set!</fail>

        <echo message="Downloading build_id: ${build_id} as executable ${executable_name}"/>
        
        <exec executable="curl">
            <arg value="-s" />
            <arg value="--location" />
            <arg value="https://eu.api.cloud.tibco.com/tci/v1/subscriptions/0/app/build/flogo/${build_id}?compress=true" />
            <arg value="--header" />
            <arg value="accept: application/octet-stream" />
            <arg value="--header" />
            <arg value="Content-Type: application/x-www-form-urlencoded" />        
            <arg value="--header" />
            <arg value="Authorization: Bearer ${token}" />
            <arg value="--output" />
            <arg value="${executable_name}" />        
        </exec>

        <chmod file="${executable_name}" perm="755"/>
        
    </target>
    
    <target name="download-app-using-appid" depends="init">
    
        <fail unless="token">Bearer Token not set!</fail>

        <exec executable="curl">
            <arg value="-s" />
            <arg value="--location" />
            <arg value="https://eu.api.cloud.tibco.com/tci/v1/subscriptions/0/apps/${appid}/flogo/build?os=${target_os}&amp;arch=${target_arch}&amp;compress=true" />
            <arg value="--header" />
            <arg value="accept: application/octet-stream" />
            <arg value="--header" />
            <arg value="Content-Type: application/x-www-form-urlencoded" />        
            <arg value="--header" />
            <arg value="Authorization: Bearer ${token}" />
            <arg value="--output" />
            <arg value="${executable_name}" />        
        </exec>

        <chmod file="${executable_name}" perm="755"/>
            
    </target>


    <target name="download-testsuite" depends="init">

        <fail unless="token">Bearer Token not set!</fail>

        <exec executable="curl">
            <arg value="-s" />
            <arg value="--location" />
            <arg value="https://eu.api.cloud.tibco.com/tci/v1/subscriptions/0/apps/${appid}/testsuite/export" />
            <arg value="--header" />
            <arg value="accept: application/json" />      
            <arg value="--header" />
            <arg value="Authorization: Bearer ${token}" />
            <arg value="--output" />
            <arg value="testsuite.flogotest" />        
        </exec>
    
    </target>


    <target name="export-app" depends="init">
    
        <fail unless="token">Bearer Token not set!</fail>

        <exec executable="curl">
            <arg value="-s" />
            <arg value="--location" />
            <arg value="https://eu.api.cloud.tibco.com/tci/v1/subscriptions/0/apps/${appid}/export?manifest=true" />
            <arg value="--header" />
            <arg value="accept: application/zip" />    
            <arg value="--header" />
            <arg value="Authorization: Bearer ${token}" />
            <arg value="--output" />
            <arg value="export.zip" />        
        </exec>    
    </target>

    <target name="run-testsuite" depends="clean, build, download-app-using-appid, download-testsuite">
       <exec executable="flogo-app.exe">
         <arg value="--test" />
         <arg value="--test-file" />
         <arg value="testsuite.flogotest" />
         <arg value="--test-suites" />
         <arg value="Testsuite_1" />
         <arg value="--output-dir" />
         <arg value="${user.dir}/tests" />
         <arg value="--result-filename" />
         <arg value="unittestapp" />
       </exec>
    </target>

    <target name="eval-testresults" depends="run-testsuite">
       <loadfile property="results" srcFile="${user.dir}/tests/unittestapp.testresult" />
       <echo message="${results}" />

       <exec executable="jq" input="${user.dir}/tests/unittestapp.testresult" outputproperty="failedSuites">
         <arg value=".result.failedSuites"/>
       </exec>

       <condition property="testsuite.passed">
          <equals arg1="${failedSuites}" arg2="0" />
       </condition>
 
       <fail unless="testsuite.passed">Test Suite Failed</fail>

    </target>


    <target name="all" depends="clean, build, download-app-using-appid, download-testsuite, export-app, run-testsuite, eval-testresults">
    </target>

</project>
